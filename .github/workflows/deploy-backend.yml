name: Deploy Backend to Azure Container Apps

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
  workflow_dispatch:

env:
  REGISTRY: backendacr.azurecr.io
  IMAGE_REPO: bandarmolony-backend
  RESOURCE_GROUP: bandarmolony-rg
  CONTAINER_APP_NAME: bandarmolony-backend

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Prepare image tags
      id: prep
      run: |
        echo "TAG=main-${GITHUB_SHA}" >> $GITHUB_ENV
        echo "IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_REPO }}:main-${GITHUB_SHA}" >> $GITHUB_ENV
        echo "IMAGE_LATEST=${{ env.REGISTRY }}/${{ env.IMAGE_REPO }}:latest" >> $GITHUB_ENV

    - name: Login to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Set up Docker Buildx (docker-container)
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker-container
        install: true

    - name: Ensure builder
      run: |
        docker buildx create --name gha-builder --driver docker-container --use || docker buildx use gha-builder
        docker buildx inspect --bootstrap

    - name: Build and Push
      uses: docker/build-push-action@v6
      with:
        context: ./backend
        push: true
        tags: |
          ${{ env.IMAGE }}
          ${{ env.IMAGE_LATEST }}
        platforms: linux/amd64
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to Azure Container Apps
      uses: azure/container-apps-deploy-action@v1
      with:
        containerAppName: ${{ env.CONTAINER_APP_NAME }}
        resourceGroup: ${{ env.RESOURCE_GROUP }}
        imageToDeploy: ${{ env.IMAGE }}
        environmentVariables: |
          NODE_ENV=production
          PORT=8080
          SUPABASE_URL=${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY=${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          MIDTRANS_MERCHANT_ID=${{ secrets.MIDTRANS_MERCHANT_ID }}
          MIDTRANS_CLIENT_KEY=${{ secrets.MIDTRANS_CLIENT_KEY }}
          MIDTRANS_SERVER_KEY=${{ secrets.MIDTRANS_SERVER_KEY }}
          MIDTRANS_IS_PRODUCTION=${{ secrets.MIDTRANS_IS_PRODUCTION }}
          MIDTRANS_3DS=${{ secrets.MIDTRANS_3DS }}
          MIDTRANS_SANITIZED=${{ secrets.MIDTRANS_SANITIZED }}
          MIDTRANS_PAYMENT_NOTIFICATION_URL=${{ secrets.MIDTRANS_PAYMENT_NOTIFICATION_URL }}
          MIDTRANS_RECURRING_NOTIFICATION_URL=${{ secrets.MIDTRANS_RECURRING_NOTIFICATION_URL }}
          MIDTRANS_PAY_ACCOUNT_NOTIFICATION_URL=${{ secrets.MIDTRANS_PAY_ACCOUNT_NOTIFICATION_URL }}
          MIDTRANS_FINISH_REDIRECT_URL=${{ secrets.MIDTRANS_FINISH_REDIRECT_URL }}
          MIDTRANS_UNFINISH_REDIRECT_URL=${{ secrets.MIDTRANS_UNFINISH_REDIRECT_URL }}
          MIDTRANS_ERROR_REDIRECT_URL=${{ secrets.MIDTRANS_ERROR_REDIRECT_URL }}
          FRONTEND_URL=${{ secrets.FRONTEND_URL }}
          CORS_ORIGIN=${{ secrets.CORS_ORIGIN }}
          PAYMENT_TIMEOUT_MINUTES=${{ secrets.PAYMENT_TIMEOUT_MINUTES }}
          AZURE_STORAGE_CONNECTION_STRING=${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
          AZURE_STORAGE_CONTAINER_NAME=${{ secrets.AZURE_STORAGE_CONTAINER_NAME }}
          TICMI_API_KEY=${{ secrets.TICMI_API_KEY }}
          TICMI_API_URL=${{ secrets.TICMI_API_URL }}
          LOG_LEVEL=error

    - name: Show deployed image
      run: |
        echo "Deployed: $IMAGE"
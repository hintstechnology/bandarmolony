name: Deploy Backend to Azure Container Apps

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
  workflow_dispatch:

env:
  REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
  IMAGE_REPO: bandarmolony-backend
  RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
  CONTAINER_APP_NAME: ${{ secrets.CONTAINER_APP_NAME }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Prepare image tags
      id: prep
      run: |
        echo "TAG=main-${GITHUB_SHA}" >> $GITHUB_ENV
        echo "IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_REPO }}:main-${GITHUB_SHA}" >> $GITHUB_ENV
        echo "IMAGE_LATEST=${{ env.REGISTRY }}/${{ env.IMAGE_REPO }}:latest" >> $GITHUB_ENV

    - name: Login to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Set up Docker Buildx (docker-container)
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker-container
        install: true

    - name: Ensure builder
      run: |
        docker buildx create --name gha-builder --driver docker-container --use || docker buildx use gha-builder
        docker buildx inspect --bootstrap

    - name: Build and Push
      uses: docker/build-push-action@v6
      with:
        context: ./backend
        push: true
        tags: |
          ${{ env.IMAGE }}
          ${{ env.IMAGE_LATEST }}
        platforms: linux/amd64
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to Azure Container Apps
      run: |
        az containerapp update \
          --name ${{ env.CONTAINER_APP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --image ${{ env.IMAGE }} \
          --replace-env-vars \
            NODE_ENV=${{ secrets.NODE_ENV }} \
            PORT=${{ secrets.PORT }} \
            SUPABASE_URL=${{ secrets.SUPABASE_URL }} \
            SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }} \
            SUPABASE_SERVICE_ROLE_KEY=${{ secrets.SUPABASE_SERVICE_ROLE_KEY }} \
            DATABASE_URL=${{ secrets.DATABASE_URL }} \
            MIDTRANS_MERCHANT_ID=${{ secrets.MIDTRANS_MERCHANT_ID }} \
            MIDTRANS_CLIENT_KEY=${{ secrets.MIDTRANS_CLIENT_KEY }} \
            MIDTRANS_SERVER_KEY=${{ secrets.MIDTRANS_SERVER_KEY }} \
            MIDTRANS_IS_PRODUCTION=${{ secrets.MIDTRANS_IS_PRODUCTION }} \
            MIDTRANS_3DS=${{ secrets.MIDTRANS_3DS }} \
            MIDTRANS_SANITIZED=${{ secrets.MIDTRANS_SANITIZED }} \
            MIDTRANS_PAYMENT_NOTIFICATION_URL=${{ secrets.MIDTRANS_PAYMENT_NOTIFICATION_URL }} \
            MIDTRANS_RECURRING_NOTIFICATION_URL=${{ secrets.MIDTRANS_RECURRING_NOTIFICATION_URL }} \
            MIDTRANS_PAY_ACCOUNT_NOTIFICATION_URL=${{ secrets.MIDTRANS_PAY_ACCOUNT_NOTIFICATION_URL }} \
            MIDTRANS_FINISH_REDIRECT_URL=${{ secrets.MIDTRANS_FINISH_REDIRECT_URL }} \
            MIDTRANS_UNFINISH_REDIRECT_URL=${{ secrets.MIDTRANS_UNFINISH_REDIRECT_URL }} \
            MIDTRANS_ERROR_REDIRECT_URL=${{ secrets.MIDTRANS_ERROR_REDIRECT_URL }} \
            FRONTEND_URL=${{ secrets.FRONTEND_URL }} \
            CORS_ORIGIN=${{ secrets.CORS_ORIGIN }} \
            PAYMENT_TIMEOUT_MINUTES=${{ secrets.PAYMENT_TIMEOUT_MINUTES }} \
            AZURE_STORAGE_CONNECTION_STRING=${{ secrets.AZURE_STORAGE_CONNECTION_STRING }} \
            AZURE_STORAGE_CONTAINER_NAME=${{ secrets.AZURE_STORAGE_CONTAINER_NAME }} \
            TICMI_JWT_TOKEN=${{ secrets.TICMI_JWT_TOKEN }} \
            TICMI_API_BASE_URL=${{ secrets.TICMI_API_BASE_URL }} \
            HOLDING_ENDPOINT=${{ secrets.TICMI_HOLDING_ENDPOINT }} \
            SCHEDULER_TIMEZONE=${{ secrets.SCHEDULER_TIMEZONE }} \
            GCS_PROJECT_ID=${{ secrets.GCS_PROJECT_ID }} \
            GCS_BUCKET_NAME=${{ secrets.GCS_BUCKET_NAME }} \
            MAX_CONCURRENT_REQUESTS=${{ secrets.MAX_CONCURRENT_REQUESTS }} \
            BATCH_SIZE=${{ secrets.BATCH_SIZE }} \
            EMITEN_CSV_PATH=${{ secrets.EMITEN_CSV_PATH }} \
            INDEX_CSV_PATH=${{ secrets.INDEX_CSV_PATH }} \
            LOG_LEVEL=${{ secrets.LOG_LEVEL }}

    - name: Show deployed image
      run: |
        echo "Deployed: $IMAGE"